name: Node.js CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 13x
        uses: actions/setup-node@v1
        with:
          node-version: 13.x
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          node-version: 13.x
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ env.node-version }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ env.node-version }}-npm-cache-
      - run: npm ci
        env:
          CI: true
      - run: npm run lint
        env:
          CI: true

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    strategy:
      matrix:
        node-version: [10.16.x, 10.x, 12.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          node-version: ${{ matrix.node-version }}
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ env.node-version }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ env.node-version }}-npm-cache-
      - run: npm ci
        env:
          CI: true
      - run: npm test
        env:
          CI: true

  test-with-codecov:
    name: test (13.x) [With codecov]
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 13.x
        uses: actions/setup-node@v1
        with:
          node-version: 13.x
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          node-version: 13.x
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ env.node-version }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ env.node-version }}-npm-cache-
      - name: Install
        run: npm ci
        env:
          CI: true
      - run: npm run test-coverage
        env:
          CI: true
      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: build (13x) [With bundlewatch]
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 13x
        uses: actions/setup-node@v1
        with:
          node-version: 13.x
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          node-version: 13.x
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ env.node-version }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ env.node-version }}-npm-cache-
      - name: Install
        run: npm ci
        env:
          CI: true
      - name: Build
        run: npm run build
        env:
          CI: true
      # TODO: remove after https://github.com/bundlewatch/bundlewatch/pull/66 is merged and released
      # https://stackoverflow.com/a/58035262
      - name: Extract the branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Check and Report Bundlesize
        run: npm run bundlewatch
        env:
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
          # TODO: remove after https://github.com/bundlewatch/bundlewatch/pull/66 is merged and released
          CI_REPO_OWNER: "oBusk"
          CI_REPO_NAME: "read-bigint"
          CI_COMMIT_SHA: ${{ github.sha }}
          CI_BRANCH: ${{ steps.extract_branch.outputs.branch }}
